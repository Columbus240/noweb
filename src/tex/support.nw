\documentstyle[noweb]{article}
\pagestyle{noweb}
\title{{\TeX} support for {\tt noweb}}
\author{Norman Ramsey}
\begin{document}
\maketitle
\tableofcontents
@
\section{Basic {\TeX} support for {\tt noweb}}
<<kernel>>=
\def\LL{<<}
\def\GG{>>}
\def\LLS{[[}
\def\RRS{]]}
<<kernel>>=
% make \hsize in code sufficient for 88 columns
\setbox0=\hbox{\tt m}
\newdimen\codehsize
\codehsize=91\wd0 % 88 columns wasn't enough; I don't know why
\newdimen\codemargin
\codemargin=0pt
<<kernel>>=
\chardef\other=12
\def\setupcode{%
  \chardef\\=`\\
  \chardef\{=`\{
  \chardef\}=`\}
  \catcode`\$=\other
  \catcode`\&=\other
  \catcode`\#=\other
  \catcode`\%=\other
  \catcode`\~=\other
  \catcode`\_=\other
  \catcode`\^=\other
  \obeyspaces\Tt
}
{\catcode`\^^M=\active % make CR an active character
  \gdef\newlines{\catcode`\^^M=\active % make CR an active character
         \def^^M{\par\startline}}%
  \gdef\eatline#1^^M{\relax}%
}
%%% DON'T   \gdef^^M{\par\startline}}% in case ^^M appears in a \write
\def\startline{\noindent\hskip\parindent\ignorespaces}
<<kernel>>=
{\obeyspaces\global\let =\ } % from texbook, p 381
\def\setupmodname{%
  \catcode`\$=3
  \catcode`\&=4
  \catcode`\#=6
  \catcode`\%=14
  \catcode`\~=13
  \catcode`\_=8
  \catcode`\^=7
  \catcode`\ =10
  \catcode`\^^M=5
  \rm}
<<kernel>>=
\def\LA{\begingroup\setupmodname\it$\langle${}}
\def\RA{\/$\rangle$\endgroup}
\def\code{\leavevmode\begingroup\setupcode\newlines}
\def\edoc{\endgroup}
<<kernel>>=
\newbox\equivbox
\setbox\equivbox=\hbox{$\equiv$}
\newbox\plusequivbox
\setbox\plusequivbox=\hbox{$\mathord{+}\mathord{\equiv}$}
% \moddef can't have an argument because there might be \code...\edoc
\def\moddef{\leavevmode\kern-\codemargin\LA}
\def\endmoddef{\RA\unhcopy\equivbox}
\def\plusendmoddef{\RA\unhcopy\plusequivbox}
<<kernel>>=
\def\filename#1{\vfil\eject\mark{#1}}
<<kernel>>=
\def\chunklist{%
\expandafter\errhelp\expandafter{I changed \noexpand\chunklist\space
to \noexpand\nowebchunks.  I'll try to avoid such incompatible changes
in the future.}%
\errmessage{Use \string\nowebchunks\space instead of \chunklist.}}
\def\nowebchunks{\message{<Warning: You need noweave -x to use \string\nowebchunks>}}
\def\nowebindex{\message{<Warning: You need noweave -idx to use \string\nowebindex>}}
<<kernel>>=
% here is support for the new-style (capitalized) font-changing commands
% thanks to Dave Love
\ifx\documentstyle\undefined
  \let\Rm=\rm \let\Tt=\tt	% plain
\else\ifx\selectfont\undefined
  \let\Rm=\rm \let\Tt=\tt	% LaTeX OFSS
\else				% LaTeX NFSS
  \def\Rm{\fontfamily\rmdefault \fontseries\default@series
    \fontshape\default@shape \selectfont}
  \def\Tt{\fontfamily\ttdefault \fontseries\default@series
    \fontshape\default@shape \selectfont}
\fi
\fi
@
\section{The {\tt nwmac} macros for use with plain {\TeX}}
<<nwmac.tex>>=
%\magnification=\magstephalf
% scale cmbx10 instead of using cmbx12 because {\LaTeX} does, so fonts exist
\font\twlbf=cmbx10 scaled \magstep1
\font\frtbf=cmbx10 scaled \magstep2
% These fonts don't work with xdvi!

\advance\hoffset 0.5 true in
\advance\hsize -1.5 true in
\newdimen\textsize
\textsize=\hsize
\def\today{\ifcase\month\or
  January\or February\or March\or April\or May\or June\or
  July\or August\or September\or October\or November\or December\fi
  \space\number\day, \number\year}
<<nwmac.tex>>=
\long\def\ifundefined#1#2#3{%
   \expandafter\ifx\csname#1\endcsname\relax
       #2%
   \else#3%
   \fi}

\ifundefined{myheadline}
    {\headline={\hbox to \textsize{\tentt\firstmark\hfil\tenrm\today\hbox
		to 4em{\hss\folio}}\hss}}
    {\expandafter\headline\expandafter{\myheadline}}

\ifundefined{myfootline}
    {\footline={\hfil}}
    {\expandafter\footline\expandafter{\myfootline}}
<<nwmac.tex>>=
\def\semifilbreak{\vskip0pt plus1.5in\penalty-200\vskip0pt plus -1.5in}
\raggedbottom
<<nwmac.tex>>=
%
% \chapcenter macro to produce nice centered chapter titles
%
\def\chapcenter{\leftskip=0.5 true in plus 4em minus 0.5 true in
    \rightskip=\leftskip
    \parfillskip=0pt \spaceskip=.3333em \xspaceskip=.5em
    \pretolerance=9999 \tolerance=9999
    \hyphenpenalty=9999 \exhyphenpenalty=9999}
<<nwmac.tex>>=
% \startsection{LEVEL}{INDENT}{BEFORESKIP}{AFTERSKIP}{STYLE}{HEADING}
%		#1     #2      #3          #4         #5     #6
%
%	LEVEL:		depth; e.g. part=0 chapter=1 sectino=2...
%	INDENT:		indentation of heading from left margin
%	BEFORESKIP:	skip before header
%	AFTERSKIP:	skip after header
%	STYLE:		style of heading; e.g.\bf
%	HEADING:	heading of the sectino
%
\def\startsection#1#2#3#4#5#6{\par\vskip#3 plus 2in
	\penalty-200\vskip 0pt plus -2in
    \noindent{\leftskip=#2 \rightskip=0.5true in plus 4em minus 0.5 true in
              \hyphenpenalty=9999 \exhyphenpenalty=9999
              #5#6\par}\vskip#4%
    {\def\code##1{[[}\def\edoc##1{]]}\message{[#6]}}
    \settocparms{#1}
    \def\themodtitle{#6}
    {\def\code{\string\code}\def\edoc{\string\edoc}%
    \edef\next{\noexpand\write\cont{\tocskip
	\tocline{\hskip\tocindent\tocstyle\relax\themodtitle}
		{\noexpand\the\pageno}}}\next % write to toc
    }%
}
<<nwmac.tex>>=
\def\settocparms#1{
	\count255=#1
	\ifnum\count255<1
            \def\tocskip{\vskip3ptplus1in\penalty-100
			\vskip0ptplus-1in}%
            \def\tocstyle{\bf}
	    \def\tocindent{0pt}
        \else
            \def\tocskip{}
	    \def\tocstyle{\rm}
	    \dimen0=2em \advance\count255 by -1 \dimen0=\count255\dimen0
	    \edef\tocindent{\the\dimen0}
	\fi
}
<<nwmac.tex>>=
\def\tocline#1#2{\line{{\ignorespaces#1}\leaders\hbox to .5em{.\hfil}\hfil
     \hbox to1.5em{\hss#2}}}
<<nwmac.tex>>=
\def\section#1{\par \vskip3ex\noindent {\bf #1}\par\nobreak\vskip1ex\nobreak}
\def\chapter#1{\vfil\eject\startsection{0}{0pt}{6ex}{3ex}{\frtbf\chapcenter}{#1}}
\def\section#1{\startsection{1}{0pt}{4ex}{2ex}{\twlbf}{#1}}
\def\subsection#1{\startsection{2}{0pt}{2ex}{1ex}{\bf}{#1}}
\def\subsubsection#1{\startsection{3}{0pt}{1ex}{0.5ex}{\it}{#1}}
\def\paragraph#1{\startsection{4}{0pt}{1.5ex}{0ex}{\it}{#1}}

<<kernel>>

\def\begindocs#1{\filbreak}
\def\enddocs{\par}
\def\begincode#1{\par\nobreak
  \begingroup\setupcode\newlines\parindent=0pt\parskip=0pt
  \hsize=\codehsize\noindent\bchack}
\def\endcode{\endgroup}
{\catcode`\^^M=\active % make CR an active character
  \gdef\bchack#1^^M{\relax#1}%
}
<<nwmac.tex>>=
\edef\contentsfile{\jobname.toc } % file that gets table of contents info
\def\readcontents{\expandafter\input \contentsfile}

\newwrite\cont
\openout\cont=\contentsfile
\write\cont{\string\catcode`\string\@=11}% a hack to make contents
<<nwmac.tex>>=
				 % take stuff in plain.tex
\def\bye{%
    \write\cont{}% ensure that the contents file isn't empty
    \closeout\cont
    \vfil\eject\pageno=-1 % new page causes contents to be really closed
    \topofcontents\readcontents\botofcontents
    \vfil\eject\end}
\def\topofcontents{\vfil\mark{{\bf Contents}}}
\def\botofcontents{}
<<nwmac.tex>>=
\let\em=\it
% used to produce an itemized (bulleted) list in plain {\TeX}
% such lists can be nested
% mostly useful with WEB

% Usage:
% \itemize
% \item First thing
% \item second thing
% \enditemize

\newcount\listlevel
\listlevel=0
\newdimen\itemwidth
\itemwidth=3em

\def\itemize{\begingroup\advance\listlevel by1
    \def\item{\par\noindent
         \raise2pt\llap{$\scriptstyle\bullet$\ }\ignorespaces}%
    \def\nameditem##1{\par\noindent
         \llap{\rlap{##1}\hskip\itemwidth}\ignorespaces}%
    \par\advance\leftskip by\itemwidth\advance\rightskip by0.5\itemwidth}
\def\enditemize{\par\endgroup\noindent\ignorespaces}

\let\begindocument=\relax
@
\section{The {\tt noweb} document-style option for {\LaTeX}}
<<noweb.sty>>=
<<kernel>>
@ 
\subsection{Adjusting placement of code on the page}
{\LaTeX} requires a larger [[\codehsize]] because 
code is indented by [[\codemargin]].
<<noweb.sty>>=
\codemargin=10pt
\advance\codehsize by \codemargin	% make room for indentation of code
@ 
[[\nowebshift]] is used to shift the whole page left to make room for
the wide code lines.
<<noweb.sty>>=
\def\nowebshift{%
  \dimen0=-0.8in
  \if@twoside                 % Values for two-sided printing:
     \advance\evensidemargin by \dimen0
  \else                       % Values for one-sided printing:
     \advance\evensidemargin by \dimen0
     \advance\oddsidemargin by \dimen0
  \fi
}
@ 

\subsection{Environments for setting code}
<<noweb.sty>>=
\def\@begincode{\parindent\z@\parfillskip\@flushglue\parskip\z@
  \item[]\vskip\parskip
  \def\baselinestretch{1.0}\small\nowebsize
  \leftskip\@totalleftmargin\rightskip\z@
  \advance\leftskip\codemargin
  \@tempswafalse \def\par{\if@tempswa\hbox{}\fi\@tempswatrue\@@par}%
  \obeylines \Tt \catcode``=13 \@noligs \setupcode}

% \noindent puts into horizontal mode so that lines can follow without
% indentation if there is no following \par.  The \hfil afterwards is
% some glue so that it there are lines following immediately, it will
% be possible to break there.  If I forced a break with \break, that
% would be wrong because a following \par would leave us with an
% underfull (empty!) hbox.

\def\begincode#1{\par\vskip3pt
    \penalty500
    \noindent\hbox to \hsize\bgroup\begin{minipage}{\codehsize}%
    \begin{trivlist}\@begincode \frenchspacing\@vobeyspaces\parskip=\z@}
\def\endcode{\end{trivlist}\vskip0.1pt\@endparenv\end{minipage}\hss\egroup\hfil}
\def\webcode{\par\vskip3pt\noindent\hbox to \hsize\bgroup\begin{minipage}{\codehsize}%
             \begin{trivlist}\@begincode \frenchspacing\@vobeyspaces}
\def\endwebcode{\strut\end{trivlist}\vskip0.1pt\end{minipage}\hss\egroup\hfil}

\def\code{\leavevmode\begingroup\setupcode\@vobeyspaces\obeylines}
\def\edoc{\endgroup}

\let\nowebsize=\normalsize
@
<<noweb.sty>>=
\def\@maybreak#1{\vskip0pt plus #1\penalty-500\vskip0pt plus -#1}
\newcommand{\maybreak}{\@maybreak}
\def\begindocs#1{\relax\ifvmode\@maybreak{1in}\fi}
\def\nwdocspar{\par\@maybreak{1in}}
\def\enddocs{\relax}
@
\subsection{The {\tt noweb} page style}
<<noweb.sty>>=
\newdimen\@original@textwidth
\@original@textwidth=\textwidth

\def\ps@noweb{%
  \let\@mkboth\@gobbletwo
  \def\@oddfoot{}\def\@evenfoot{}%       No feet.
  \if@twoside         % If two-sided printing.
    \def\@evenhead{\hbox to \@original@textwidth{%
           \Rm \thepage\qquad{\Tt\leftmark}\hfil\today}}%        Left heading.
    \def\@oddhead{\hbox to \@original@textwidth{%
           \Rm \today\hfil{\Tt\leftmark}\qquad\thepage}}% Right heading.
  \else               % If one-sided printing.
    \def\@oddhead{\hbox to \@original@textwidth{%
           \Rm \today\hfil{\Tt\leftmark}\qquad\thepage}}% Right heading.
    \let\@evenhead\@oddhead
  \fi
  \def\chaptermark##1{}%
  \def\sectionmark##1{}%
  \def\subsectionmark##1{}%
  \def\subsubsectionmark##1{}%
  \def\paragraphmark##1{}%
  \def\subparagraphmark##1{}%
  \def\filename##1{\vfil\eject\markboth{##1}{##1}}%
}
\def\filename#1{\relax}
@
\subsection{Chunk cross-reference}
[[\alsodefined]], [[\used]], and [[\notused]] are emitted by the {\tt
noweb} cross-referencers. (What arguments?)
If unused chunks are output chunks, a filter can slip in [[\let\notused\nwoutput]].
<<noweb.sty>>=
\def\alsodefined#1{\break\hspace{-\codemargin}{\footnotesize\Rm 
	This definition is continued on \pages{#1}.}\hfil}
\def\used#1{\break\hspace{-\codemargin}{\footnotesize\Rm 
	This code is used on \pages{#1}.}\hfil}
\def\notused#1{\break\hspace{-\codemargin}{\footnotesize\Rm 
	Root chunk (not used in this document).}\hfil}
\def\nwoutput#1{\break\hspace{-\codemargin}{\footnotesize\Rm 
	This code is written to file {\Tt #1}.}\hfil}
@
Here's some list-of-pages code that's supposed to eliminate
duplicates, insert commas, and insert ``and'' at the right place.
A lot of the list stuff is cribbed from the {\TeX}book.
<<noweb.sty>>=
\def\empty{}
\def\lop#1\to#2{\expandafter\lopoff#1\lopoff#1#2}
\long\def\lopoff\\#1#2\lopoff#3#4{\def#4{#1}\def#3{#2}}
\def\loop#1\repeat{\def\iterate{#1\expandafter\iterate\fi}%
	\iterate \let\iterate\relax}
<<noweb.sty>>=
\def\thepageref#1{\@ifundefined{r@#1}{0\@warning
   {Reference `#1' on page \thepage \space 
    undefined}}{\@nameuse{r@#1}}}
<<noweb.sty>>=
\newcount\lastpage
\newcount\thispage
\newcount\pagesout

\def\dosetpage#1#2#3\@nil{\thispage=#2\relax}

\def\setthispage#1\done{%
   \@ifundefined{r@#1}{{\bf ??}\@warning
   {Reference `#1' on page \thepage \space 
    undefined}\thispage=0}{\edef\@tempa{\@nameuse{r@#1}}\expandafter
    \dosetpage\@tempa\@nil}}

\def\setpagenumbers#1{%
  \def\thepages{#1}%
  \def\pagenumbers{}%
  \lastpage=-1
  \loop\ifx\thepages\empty\else
     \lop\thepages\to\lastref
    \expandafter\setthispage\lastref\done
    \ifnum\thispage=\lastpage \else
      \edef\pagenumbers{\pagenumbers\noexpand\\{\the\thispage}}%
      \lastpage=\thispage  
    \fi
  \repeat}
<<noweb.sty>>=
\def\pages#1{%
  \setpagenumbers{#1}%
  \expandafter\dopages\pagenumbers\done
}

\def\dopages#1\done{%
  \def\thepages{#1}%
  \lop\thepages\to\lastref
  \lastpage=\lastref
  \ifx\thepages\empty page \else pages \fi
  \the\lastpage
  \pagesout=1
  \loop\ifx\thepages\empty\else
    \lop\thepages\to\lastref
    \thispage=\lastref
    \ifx\thepages\empty 
       \ifnum\pagesout>1 , \else{} \fi
       and 
    \else ,
    \fi 
    \the\thispage
    \advance\pagesout by 1
    \lastpage=\thispage  
  \repeat}
@
\subsection{Sub-page references}
This is the wonderful code that Dave Love provided to make page
references like 7a, 7b, and so on.

This code
provides a mechanism for defining `page
sub-references' using [[\sublabel{foo}]] referenced with
[[\subpageref{foo}]].  Sub-references will be numbered like these real
examples: \subpageref{ref:foo}, \subpageref{ref:bar},
\subpageref{ref:baz}\sublabel{ref:foo}\sublabel{ref:bar}\sublabel{ref:baz}
etc.\ unless there is only one on the page, in which case the letter
will be dropped like this: \subpageref{ref:fred}.

To be able to use [[\subpageref]] we must define the label with
[[\sublabel]], used like label.  (Using
[[\ref]] with a label defined by [[\sublabel]] will
produce the sub-reference number, by the way, and [[\pageref]]
works as expected.)  Note that
[[\subpageref]] is robust and [[\ref]] and [[\pageref]] are redefined to be
robust also, as they will be in future \LaTeX{} releases.
Incidentally, these expand to the relevant text plus [[\null]]---you
might want to strip this off, e.g.\ for sorting lists.


There are various ways we could attack this task (which is made
non-trivial by the well-known asynchrony of (La)\TeX's output
routine).  There are various ways we might tackle the problem, but
they all must depend on hacks in the [[.aux]] file or a similar one.
Joachim Schrod's [[fnpag.sty]] does the same sort of thing differently
to this \LaTeX-specific approach.  See [[latex.tex]] for enlightenment
on the cross-referencing mechanism and the \LaTeX{} internals used
below.

@
The [[\subpageref]] macro first does a normal [[\pageref]].  If the
reference is actually defined, it then goes on to check whether the
control sequence [[2on]]\LA{}{page referenced}\RA{} is defined and sets the
[[\ref]] value to get [[a]] etc.\ if so.  The magic, of course, is in
defining the [[2on]] bit appropriately.
<<noweb.sty>>=
\newcommand{\subpageref}[1]{%
  \pageref{#1}%
  \@ifundefined{r@#1}%
    {}%
    {\@ifundefined{2on\@pageref{#1}}%
      {}%
      {\ref{#1}}}}
@
[[\@pageref]] is like [[\pageref]], but it expands to [[\relax]] without a warning
if the reference is undefined.
<<noweb.sty>>=
\def\@pageref#1{\expandafter\expandafter\expandafter
                \@cdr\csname r@#1\endcsname\@nil}
@
[[\sublabel]] is like the usual [[\label]] command, except that it writes
[[\newsublabel]] onto the [[.aux]] file rather than [[\newlabel]].
<<noweb.sty>>=
\newcommand{\sublabel}[1]{%
  \@bsphack\if@filesw {\let\thepage\relax
   \def\protect{\noexpand\noexpand\noexpand}%
   \edef\@tempa{\write\@auxout{\string
      \newsublabel{#1}{{}{\thepage}}}}%
   \expandafter}\@tempa
   \if@nobreak \ifvmode\nobreak\fi\fi\fi\@esphack}
@
[[\newsublabel]] is the macro that does the important work.  It is called with the
same sort of arguments as [[\newlabel]]: the first argument is the
label name and the second is [[{]]\LA ref value[[}{]]page number\RA[[}]].
(Note that the only definition here which needs to be
global is the one which is, and that [[\global]] is redefined by
[[\enddocument]], which will bite you if you use it\dots)
<<noweb.sty>>=
<<definition of [[\newsublabel]]>>
@
First we extract the page number into [[\this@page]].
<<definition of [[\newsublabel]]>>=
\newcommand{\newsublabel}[2]{%
  \edef\this@page{\@cdr#2\@nil}%
@
Then we see whether it's greater than the value of [[\last@page]]
which was stashed away by the last [[\newsublabel]] (or is zero if
this is the first one).  If the page has changed, we reset the
counter [[\sub@page]] telling us how many sub-labels there have been
on the page.
<<definition of [[\newsublabel]]>>=
  \ifnum\this@page>\last@page
    \sub@page=0\relax
  \fi
  \last@page=\this@page
  \advance\sub@page by 1
@
If we've had at least two on the page, we define the 
[[2on]]\LA{}{page no.}\RA{} macro to indicate the fact.
<<definition of [[\newsublabel]]>>=
  \ifnum\sub@page=2
    \global\@namedef{2on\this@page}{}%
  \fi
@
Then we write a normal [[\newlabel]] with the sub-reference as the
normal reference value in the second argument.
<<definition of [[\newsublabel]]>>=
  \edef\@tempa{\noexpand\newlabel{#1}%
    {{\@alph{\number\sub@page}}{\this@page}}}%
  \@tempa}
@
We need to define these counters.  [[\last@page]] could be a
suitably-initialised macro instead.
<<noweb.sty>>=
\newcount\last@page
\newcount\sub@page
@
We use Rainer's new expandable definitions of [[\ref]] and
[[\pageref]] to minimise the risk of nasty surprises.
<<noweb.sty>>=
% RmS 92/08/14: made \ref and \pageref robust
\def\ref#1{\@ifundefined{r@#1}{{\bf ??}\@warning
   {Reference `#1' on page \thepage \space
    undefined}}{\expandafter\expandafter\expandafter
                \@car\csname r@#1\endcsname
                \@nil\null}}
\def\pageref#1{\@ifundefined{r@#1}{{\bf ??}\@warning
   {Reference `#1' on page \thepage \space
    undefined}}{\expandafter\expandafter\expandafter
                \@cdr\csname r@#1\endcsname
                \@nil\null}}
@
\section{Indexing (identifier cross-reference) support}

\subsection{Tracking definitions and uses}
Both definitions and uses of identifiers may be either ``bound'' or
``free.''
A bound definition or use appears within a code chunk and is associated
with the sub-page number of that code chunk.
A free definition or use appears within a documentation chunk and is associated
with the number of the page on which it appears.
The control sequences used are
<<noweb.sty>>=
% \boundindexdefn{printable name}{identifying label}{label of chunk}
% \freeindexdefn{printable name}{identifying label}
% \indexuse{printable name}{identifying label}
% \indexuse{printable name}{identifying label}

\def\boundindexdefn#1#2#3{%
{\edef\@wazoo{\noexpand\@addtoindexdefns{\subpageref{#3}}{#2}}%
   \@wazoo}}

\def\freeindexdefn#1#2{%
  \marginpar{\Tt #1}%
  \@addtoindexdefns{#2}{\thepage}}

\def\indexuse#1#2{\@addtoindexuses{#2}{\thepage}}
<<noweb.sty>>=
\chardef\nwbs=`\\

@
These utility functions add to lists of definitions and uses.
They don't capture forward references; they need to be rewritten to
use the [[.aux]] file.
<<noweb.sty>>=
\def\@addtoindexdefns#1#2{\@addtoixlist{ixd}{#2}{#1}%
                          \@addtoixlist{ixu}{#2}{{\underline{#1}}}}
\def\@addtoindexuses{\@addtoixlist{ixu}}

\def\@addtoixlist#1#2#3{%
  \@ifundefined{#1@#2}%
    {\global\@namedef{#1@#2}{{#3}}}%
    {\expandafter\@cons\csname #1@#2\endcsname{#3}}%
}
@
\subsection{Supporting a mini-index at the end of each chunk}
<<noweb.sty>>=
% \identdefs{{name 1}\\{{name 2}\\...\\{name n}}
%    Defines name 1, name 2, name n.
% \identuses{{name 1\indexrefs{label 1}}\\...\\{name n\indexrefs{label n}}}
%    Uses name 1 page page page, ..., name n page.
% \indexpages{identifying label}
%    expands to list of page references
% \indexlisting{name}{label}
%    what actually appears in an index

\def\identdefs#1{\break\hspace{-\codemargin}{\footnotesize\Rm%\tracingall 
	Defines \Tt\def\\{{\Rm, }}#1\hfil}}
\def\identuses#1{\break\hspace{-\codemargin}{\footnotesize\Rm%\tracingall 
	Uses \Tt\def\\{, }#1\hfil}}

\def\indexrefs#1{{\Rm~\let\@elt=~\@nameuse{ixd@#1}}}
\def\indexpages#1{{\def\@elt{, }\@nameuse{ixu@#1}}}
\def\indexlisting#1#2{{\Tt #1}: \indexpages{#2}\\}
@
\twocolumn
\section{Index}
\nowebindex
\end{document}
